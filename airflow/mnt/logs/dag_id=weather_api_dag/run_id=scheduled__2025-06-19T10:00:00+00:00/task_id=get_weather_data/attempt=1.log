[2025-06-19T11:17:33.192+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: weather_api_dag.get_weather_data scheduled__2025-06-19T10:00:00+00:00 [queued]>
[2025-06-19T11:17:33.209+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: weather_api_dag.get_weather_data scheduled__2025-06-19T10:00:00+00:00 [queued]>
[2025-06-19T11:17:33.209+0000] {taskinstance.py:2171} INFO - Starting attempt 1 of 1
[2025-06-19T11:17:33.241+0000] {taskinstance.py:2192} INFO - Executing <Task(PythonOperator): get_weather_data> on 2025-06-19 10:00:00+00:00
[2025-06-19T11:17:33.276+0000] {standard_task_runner.py:60} INFO - Started process 838 to run task
[2025-06-19T11:17:33.302+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'weather_api_dag', 'get_weather_data', 'scheduled__2025-06-19T10:00:00+00:00', '--job-id', '14', '--raw', '--subdir', 'DAGS_FOLDER/weather_api_dag.py', '--cfg-path', '/tmp/tmpqi2qumin']
[2025-06-19T11:17:33.311+0000] {standard_task_runner.py:88} INFO - Job 14: Subtask get_weather_data
[2025-06-19T11:17:33.559+0000] {task_command.py:423} INFO - Running <TaskInstance: weather_api_dag.get_weather_data scheduled__2025-06-19T10:00:00+00:00 [running]> on host 77bf71b7bc3a
[2025-06-19T11:17:33.875+0000] {taskinstance.py:2481} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='supitchaya.p99@gmail.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='weather_api_dag' AIRFLOW_CTX_TASK_ID='get_weather_data' AIRFLOW_CTX_EXECUTION_DATE='2025-06-19T10:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-06-19T10:00:00+00:00'
[2025-06-19T11:17:33.995+0000] {logging_mixin.py:188} INFO - {'conf': <***.configuration.AirflowConfigParser object at 0x7fbeaa4700a0>, 'dag': <DAG: weather_api_dag>, 'dag_run': <DagRun weather_api_dag @ 2025-06-19 10:00:00+00:00: scheduled__2025-06-19T10:00:00+00:00, state:running, queued_at: 2025-06-19 11:17:13.281373+00:00. externally triggered: False>, 'data_interval_end': DateTime(2025, 6, 19, 11, 0, 0, tzinfo=Timezone('UTC')), 'data_interval_start': DateTime(2025, 6, 19, 10, 0, 0, tzinfo=Timezone('UTC')), 'ds': '2025-06-19', 'ds_nodash': '20250619', 'execution_date': <Proxy at 0x7fbe86ee6580 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'execution_date', DateTime(2025, 6, 19, 10, 0, 0, tzinfo=Timezone('UTC')))>, 'expanded_ti_count': None, 'inlets': [], 'logical_date': DateTime(2025, 6, 19, 10, 0, 0, tzinfo=Timezone('UTC')), 'macros': <module '***.macros' from '/home/***/.local/lib/python3.8/site-packages/***/macros/__init__.py'>, 'next_ds': <Proxy at 0x7fbe86e29f80 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'next_ds', '2025-06-19')>, 'next_ds_nodash': <Proxy at 0x7fbe86edb580 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'next_ds_nodash', '20250619')>, 'next_execution_date': <Proxy at 0x7fbe872cf240 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'next_execution_date', DateTime(2025, 6, 19, 11, 0, 0, tzinfo=Timezone('UTC')))>, 'outlets': [], 'params': {}, 'prev_data_interval_start_success': None, 'prev_data_interval_end_success': None, 'prev_ds': <Proxy at 0x7fbe86e32380 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'prev_ds', '2025-06-19')>, 'prev_ds_nodash': <Proxy at 0x7fbe86e32c40 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'prev_ds_nodash', '20250619')>, 'prev_execution_date': <Proxy at 0x7fbe86e32c80 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'prev_execution_date', DateTime(2025, 6, 19, 9, 0, 0, tzinfo=Timezone('UTC')))>, 'prev_execution_date_success': <Proxy at 0x7fbe86e32680 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'prev_execution_date_success', None)>, 'prev_start_date_success': None, 'prev_end_date_success': None, 'run_id': 'scheduled__2025-06-19T10:00:00+00:00', 'task': <Task(PythonOperator): get_weather_data>, 'task_instance': <TaskInstance: weather_api_dag.get_weather_data scheduled__2025-06-19T10:00:00+00:00 [running]>, 'task_instance_key_str': 'weather_api_dag__get_weather_data__20250619', 'test_mode': False, 'ti': <TaskInstance: weather_api_dag.get_weather_data scheduled__2025-06-19T10:00:00+00:00 [running]>, 'tomorrow_ds': <Proxy at 0x7fbe86e32880 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'tomorrow_ds', '2025-06-20')>, 'tomorrow_ds_nodash': <Proxy at 0x7fbe86e389c0 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'tomorrow_ds_nodash', '20250620')>, 'triggering_dataset_events': <Proxy at 0x7fbe86e57e40 with factory <function _get_template_context.<locals>.get_triggering_events at 0x7fbe86e56160>>, 'ts': '2025-06-19T10:00:00+00:00', 'ts_nodash': '20250619T100000', 'ts_nodash_with_tz': '20250619T100000+0000', 'var': {'json': None, 'value': None}, 'conn': None, 'yesterday_ds': <Proxy at 0x7fbe86e387c0 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'yesterday_ds', '2025-06-18')>, 'yesterday_ds_nodash': <Proxy at 0x7fbe86e38c00 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fbe86ecbc10>, 'yesterday_ds_nodash', '20250618')>, 'templates_dict': None}
[2025-06-19T11:17:34.061+0000] {logging_mixin.py:188} WARNING - /home/***/.local/lib/python3.8/site-packages/***/utils/context.py:315 AirflowContextDeprecationWarning: Accessing 'execution_date' from the template is deprecated and will be removed in a future version. Please use 'data_interval_start' or 'logical_date' instead.
[2025-06-19T11:17:34.069+0000] {logging_mixin.py:188} INFO - 2025-06-19T10:00:00+00:00
[2025-06-19T11:17:34.072+0000] {logging_mixin.py:188} INFO - 2025-06-19
[2025-06-19T11:17:34.281+0000] {logging_mixin.py:188} INFO - https://api.openweathermap.org/data/2.5/weather?q=bangkok&appid=***&units=metric
[2025-06-19T11:17:34.282+0000] {logging_mixin.py:188} INFO - {'coord': {'lon': 100.5167, 'lat': 13.75}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'base': 'stations', 'main': {'temp': 33.94, 'feels_like': 40.94, 'temp_min': 31.94, 'temp_max': 33.94, 'pressure': 1006, 'humidity': 61, 'sea_level': 1006, 'grnd_level': 1006}, 'visibility': 10000, 'wind': {'speed': 8.62, 'deg': 243, 'gust': 13.07}, 'clouds': {'all': 96}, 'dt': 1750331635, 'sys': {'type': 1, 'id': 9235, 'country': 'TH', 'sunrise': 1750287069, 'sunset': 1750333640}, 'timezone': 25200, 'id': 1609350, 'name': 'Bangkok', 'cod': 200}
[2025-06-19T11:17:34.287+0000] {python.py:201} INFO - Done. Returned value was: /opt/***/dags/weather_data_2025-06-19T10:00:00+00:00.json
[2025-06-19T11:17:34.329+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=weather_api_dag, task_id=get_weather_data, execution_date=20250619T100000, start_date=20250619T111733, end_date=20250619T111734
[2025-06-19T11:17:34.387+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-06-19T11:17:34.445+0000] {taskinstance.py:3281} INFO - 1 downstream tasks scheduled from follow-on schedule check
